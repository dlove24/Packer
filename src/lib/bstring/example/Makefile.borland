#if 0

#########################################
#                                       #
#   Bstrlib examples for DOS            #
#                                       #
#   Makefile.borland                    #
#                                       #
#   Make sure that the turbo C binary   #
#   utilities are in the path, change   #
#   the CDIR, BSTRDIR and BCDIR         #
#   variables below as necessary and    #
#   issue the command:                  #
#                                       #
#       MAKE.EXE -fMakefile.borland     #
#                                       #
#########################################

CDIR=.
ODIR=.\obj
BSTRDIR=$(CDIR)\..
BCDIR=C:\Progra~1\Borland\BCC55

INCLUDES=-I$(BCDIR)\include -I$(BSTRDIR)
DEFINES=-DMAIN_TEST_FOR_CSV
CFLAGS=-w-aus -d -k- -A -M -6 -q $(DEFINES)
CC=$(BCDIR)\Bin\bcc32.exe $(CFLAGS) $(INCLUDES) -L$(BCDIR)\lib
LD=$(BCDIR)\Bin\ilink32.exe
LFILES=+$(BCDIR)\Lib\c0x32.obj+.\obj\bstrlib.obj+.\obj\bstraux.obj
LFLAGS=/q/Gn/c/m/ap/Tpe/L$(BCDIR)\Lib $(BCDIR)\Lib\import32.lib+$(BCDIR)\Lib\cw32.lib

COMOBJS = $(ODIR)\bstrlib.obj $(ODIR)\bstraux.obj

#QUIET =
QUIET = @

ALLAPPS = 1.exe 2.exe 3.exe 4.exe 5.exe rot13.exe cbench.exe num2word.exe strcat.exe reverse.exe strings.exe csvparse.exe

all: $(ALLAPPS)

$(ODIR)\bstrlib.obj: $(BSTRDIR)\bstrlib.c
        $(QUIET)$(CC) -c -o$*.obj $(BSTRDIR)\$&.c

$(ODIR)\bstraux.obj: $(BSTRDIR)\bstraux.c
        $(QUIET)$(CC) -c -o$*.obj $(BSTRDIR)\$&.c

1.exe: $(CDIR)\1.c $(COMOBJS)
        $(QUIET)$(CC) -c -o$(ODIR)\$*.obj $(CDIR)\$&.c
        $(QUIET)$(LD) $(ODIR)\$*.obj$(LFILES) $(LFLAGS)
	$(QUIET)copy $*.map $(ODIR) > nul
	$(QUIET)del $*.map
	$(QUIET)del $*.tds

2.exe: $(CDIR)\2.c $(COMOBJS)
        $(QUIET)$(CC) -c -o$(ODIR)\$*.obj $(CDIR)\$&.c
        $(QUIET)$(LD) $(ODIR)\$*.obj$(LFILES) $(LFLAGS)
	$(QUIET)copy $*.map $(ODIR) > nul
	$(QUIET)del $*.map
	$(QUIET)del $*.tds

3.exe: $(CDIR)\3.c $(COMOBJS)
        $(QUIET)$(CC) -c -o$(ODIR)\$*.obj $(CDIR)\$&.c
        $(QUIET)$(LD) $(ODIR)\$*.obj$(LFILES) $(LFLAGS)
	$(QUIET)copy $*.map $(ODIR) > nul
	$(QUIET)del $*.map
	$(QUIET)del $*.tds

4.exe: $(CDIR)\4.c $(COMOBJS)
        $(QUIET)$(CC) -c -o$(ODIR)\$*.obj $(CDIR)\$&.c
        $(QUIET)$(LD) $(ODIR)\$*.obj$(LFILES) $(LFLAGS)
	$(QUIET)copy $*.map $(ODIR) > nul
	$(QUIET)del $*.map
	$(QUIET)del $*.tds

5.exe: $(CDIR)\5.c $(COMOBJS)
        $(QUIET)$(CC) -c -o$(ODIR)\$*.obj $(CDIR)\$&.c
        $(QUIET)$(LD) $(ODIR)\$*.obj$(LFILES) $(LFLAGS)
	$(QUIET)copy $*.map $(ODIR) > nul
	$(QUIET)del $*.map
	$(QUIET)del $*.tds

rot13.exe: $(CDIR)\rot13.c $(COMOBJS)
        $(QUIET)$(CC) -c -o$(ODIR)\$*.obj $(CDIR)\$&.c
        $(QUIET)$(LD) $(ODIR)\$*.obj$(LFILES) $(LFLAGS)
	$(QUIET)copy $*.map $(ODIR) > nul
	$(QUIET)del $*.map
	$(QUIET)del $*.tds

cbench.exe: $(CDIR)\cbench.c $(COMOBJS)
        $(QUIET)$(CC) -c -G -O -Z -o$(ODIR)\$*.obj $(CDIR)\$&.c
        $(QUIET)$(LD) $(ODIR)\$*.obj$(LFILES) $(LFLAGS)
	$(QUIET)copy $*.map $(ODIR) > nul
	$(QUIET)del $*.map
	$(QUIET)del $*.tds

num2word.exe: $(CDIR)\num2word.c $(COMOBJS)
        $(QUIET)$(CC) -c -o$(ODIR)\$*.obj $(CDIR)\$&.c
        $(QUIET)$(LD) $(ODIR)\$*.obj$(LFILES) $(LFLAGS)
	$(QUIET)copy $*.map $(ODIR) > nul
	$(QUIET)del $*.map
	$(QUIET)del $*.tds

strcat.exe: $(CDIR)\strcat.c $(COMOBJS)
        $(QUIET)$(CC) -c -o$(ODIR)\$*.obj $(CDIR)\$&.c
        $(QUIET)$(LD) $(ODIR)\$*.obj$(LFILES) $(LFLAGS)
	$(QUIET)copy $*.map $(ODIR) > nul
	$(QUIET)del $*.map
	$(QUIET)del $*.tds

reverse.exe: $(CDIR)\reverse.c $(COMOBJS)
        $(QUIET)$(CC) -c -o$(ODIR)\$*.obj $(CDIR)\$&.c
        $(QUIET)$(LD) $(ODIR)\$*.obj$(LFILES) $(LFLAGS)
	$(QUIET)copy $*.map $(ODIR) > nul
	$(QUIET)del $*.map
	$(QUIET)del $*.tds

strings.exe: $(CDIR)\strings.c $(COMOBJS)
        $(QUIET)$(CC) -c -o$(ODIR)\$*.obj $(CDIR)\$&.c
        $(QUIET)$(LD) $(ODIR)\$*.obj$(LFILES) $(LFLAGS)
	$(QUIET)copy $*.map $(ODIR) > nul
	$(QUIET)del $*.map
	$(QUIET)del $*.tds

csvparse.exe: $(CDIR)\csvparse.c $(COMOBJS)
        $(QUIET)$(CC) -c -o$(ODIR)\$*.obj $(CDIR)\$&.c
        $(QUIET)$(LD) $(ODIR)\$*.obj$(LFILES) $(LFLAGS)
	$(QUIET)copy $*.map $(ODIR) > nul
	$(QUIET)del $*.map
	$(QUIET)del $*.tds

clean:
	$(QUIET)command /c for %%f in ($(ODIR)\*.obj $(ODIR)\*.map) do del %%f
	$(QUIET)command /c for %%f in ($(ALLAPPS)) do if exist %%f del %%f

#endif
